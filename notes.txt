Streams are collections of data that may not be available all at once/that become available over a period of time. 

Streaming data as oppose to loading it asynchronously can prevent memory consumption problems. This is due to data being piped one chunk at a time as oppose to it being stored in memory as one huge chunk. Some files can't be served by means other than a stream in Node as it has a default buffer limit (how much data can be stored in memory).

A stream is an abstract interface for working with streaming data within Node.js.

A duplex stream is a stream which is both readable and writable.

Standard streams within computer programming are preconnected input and output communication channels between a program and its environment. Three I/O connections are standard input (stdin), standard output (stdout), and standard error (stderr).

Unix sockets (a duplex stream within Node.js) are biderectional sockets that exist in the domain of the local host and cannot be accessed over a network (exist on same host operating system).

process.stderr is a Writable stream
process.stdin is a Readable stream
process.stdout is a Writable stream

All of these objects inherit from the net.Socket object and therefore are classified as an instance of Stream.Duplex despite this not being the case.

Pushing a null value to a Readable stream in Node indicates that the stream does not have any more data.

A Node.js Buffer is class which is designed to handle raw binary data (chunks of memory) that is in the process of being moved from one place to another (e.g via a stream)

ASCII is a charecter encoding maps the numbers 0-127 to characters. Unicode is a superset for ASCII which allows the protocol to be expanded to support characters from other languages.

Utf-8 is an encoding that is used to transform an idea (e.g the letter A is ASCII character encoding) into raw data.

A socket is one endpoint of a two way communication link between two programs running on a network (the same or different machines).